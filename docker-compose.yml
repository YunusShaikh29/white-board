version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: excalidraw
      POSTGRES_PASSWORD: password
      POSTGRES_DB: excalidraw_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U excalidraw"]
      interval: 30s
      timeout: 10s
      retries: 3

  # HTTP API Server
  http-api:
    build:
      context: .
      dockerfile: apps/http/Dockerfile
    ports:
      - "5050:5050"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://excalidraw:password@db:5432/excalidraw_dev
      - JWT_SECRET=development-secret-key
      - PORT=5050
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WebSocket Server
  websocket:
    build:
      context: .
      dockerfile: apps/websocket/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://excalidraw:password@db:5432/excalidraw_dev
      - JWT_SECRET=development-secret-key
      - PORT=8081
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: apps/whiteboard/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_HTTP_BACKEND=http://localhost:5050
      - NEXT_PUBLIC_WS_URL=ws://localhost:8081
    depends_on:
      - http-api
      - websocket
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
