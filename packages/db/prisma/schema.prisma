// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       String   @unique @default(uuid())
  email    String   @unique //username
  password String
  name     String
  photo    String?
  room     Room[]
  chats    Chat[]
}


model Room {
  id        Int       @id @default(autoincrement())
  slug      String    @unique
  createdAt DateTime  @default(now())
  adminId   String
  admin     User     @relation(fields: [adminId], references: [id])
  chats     Chat[]
  shapes    Shape[]
}

model Chat {
  id      Int     @id @default(autoincrement())
  message String

  userId  String
  user    User   @relation(fields: [userId], references: [id])

  roomId  Int
  room    Room   @relation(fields: [roomId], references: [id])

}

enum ShapeType {
  rect
  circle
  pencil
  line
  arrow
  rhombus
  text
}

model Shape {
  id        Int        @id @default(autoincrement())
  type      ShapeType
  roomId    Int
  room      Room      @relation(fields: [roomId], references: [id])

  //For shapes like rectangle, rhombus and Test
  x         Float?
  y         Float?
  width     Float?
  height    Float?


  //For     circle
  centerX   Float?
  centerY   Float?
  radius    Float?
  radiusX   Float?
  radiusY   Float?

  //For line and arrow shape
  x1        Float?
  y1        Float?
  x2        Float?
  y2        Float?

  // For text (x,y,w,h,content, font, fontSize, color)
  content   String?
  font      String?
  fontSize  Int?
  color     String?

  //For pencil drawing(storing an array of points as JSON)
  points    Json?

  createdAt DateTime   @default(now())
}